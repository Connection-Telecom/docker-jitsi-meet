#
# Basic configuration options
#

# Directory where all configuration will be stored.
CONFIG=~/.jitsi-meet-cfg

# Exposed HTTP port.
HTTP_PORT=80

# Exposed HTTPS port.
HTTPS_PORT=443

# System time zone.
TZ=Africa/Johannesburg

# Public URL for the web service.
PUBLIC_URL=https://conf.telviva.com

# IP address of the Docker host. 
# See the "Running behind NAT or on a LAN environment" section in the README.
#DOCKER_HOST_ADDRESS=192.168.1.1


#
# Let's Encrypt configuration
#

# Enable Let's Encrypt certificate generation.
ENABLE_LETSENCRYPT=1

# Domain for which to generate the certificate.
LETSENCRYPT_DOMAIN=conf.telviva.com

# E-Mail for receiving important account notifications (mandatory).
LETSENCRYPT_EMAIL=support@connection-telecom.com


#
# Etherpad integration (for document sharing)
#

# Set etherpad-lite URL (uncomment to enable).
#ETHERPAD_URL_BASE=http://etherpad.meet.jitsi:9001


#
# Basic Jigasi configuration options (needed for SIP gateway support)
#

# SIP URI for incoming / outgoing calls.
# SLD: Deliberately something that Telviva will regard as external so no chargeable calls
JIGASI_SIP_URI=conf@conf.telviva.com

# Password for the specified SIP account as a clear text
JIGASI_SIP_PASSWORD=DELIBERATELY-NOT-SET

# SIP server (use the SIP account domain if in doubt).
JIGASI_SIP_SERVER=sip.telviva.com

# SIP server port
JIGASI_SIP_PORT=5060

# SIP server transport
JIGASI_SIP_TRANSPORT=UDP

#
# Authentication configuration (see README for details)
#

# Enable authentication.
#ENABLE_AUTH=1

# Enable guest access.
#ENABLE_GUESTS=1

# Select authentication type: internal, jwt or ldap
#AUTH_TYPE=internal

# JWT authentication
#

# Application identifier.
#JWT_APP_ID=my_jitsi_app_id

# Application secret known only to your token.
#JWT_APP_SECRET=my_jitsi_app_secret

# (Optional) Set asap_accepted_issuers as a comma separated list.
#JWT_ACCEPTED_ISSUERS=my_web_client,my_app_client

# (Optional) Set asap_accepted_audiences as a comma separated list.
#JWT_ACCEPTED_AUDIENCES=my_server1,my_server2


# LDAP authentication (for more information see the Cyrus SASL saslauthd.conf man page)
#

# LDAP url for connection.
#LDAP_URL=ldaps://ldap.domain.com/

# LDAP base DN. Can be empty
#LDAP_BASE=DC=example,DC=domain,DC=com

# LDAP user DN. Do not specify this parameter for the anonymous bind.
#LDAP_BINDDN=CN=binduser,OU=users,DC=example,DC=domain,DC=com

# LDAP user password. Do not specify this parameter for the anonymous bind.
#LDAP_BINDPW=LdapUserPassw0rd

# LDAP filter. Tokens example:
# %1-9 - if the input key is user@mail.domain.com, then %1 is com, %2 is domain and %3 is mail.
# %s - %s is replaced by the complete service string.
# %r - %r is replaced by the complete realm string.
#LDAP_FILTER=(sAMAccountName=%u)

# LDAP authentication method
#LDAP_AUTH_METHOD=bind

# LDAP version
#LDAP_VERSION=3

# LDAP TLS using
#LDAP_USE_TLS=1

# List of SSL/TLS ciphers to allow.
#LDAP_TLS_CIPHERS=SECURE256:SECURE128:!AES-128-CBC:!ARCFOUR-128:!CAMELLIA-128-CBC:!3DES-CBC:!CAMELLIA-128-CBC

# Require and verify server certificate
#LDAP_TLS_CHECK_PEER=1

# Path to CA cert file. Used when server sertificate verify is enabled.
#LDAP_TLS_CACERT_FILE=/etc/ssl/certs/ca-certificates.crt

# Path to CA certs directory. Used when server sertificate verify is enabled.
#LDAP_TLS_CACERT_DIR=/etc/ssl/certs

# Wether to use starttls, implies LDAPv3 and requires ldap:// instead of ldaps://
# LDAP_START_TLS=1


#
# Advanced configuration options (you generally don't need to change these)
#

# Internal XMPP domain.
XMPP_DOMAIN=conf.telviva.com

# Internal XMPP server
XMPP_SERVER=xmpp.conf.telviva.com

# Internal XMPP server URL
XMPP_BOSH_URL_BASE=http://xmpp.conf.telviva.com:5280

# Internal XMPP domain for authenticated services.
XMPP_AUTH_DOMAIN=auth.conf.telviva.com

# XMPP domain for the MUC.
XMPP_MUC_DOMAIN=muc.conf.telviva.com

# XMPP domain for the internal MUC used for jibri, jigasi and jvb pools.
XMPP_INTERNAL_MUC_DOMAIN=internal-muc.conf.telviva.com

# XMPP domain for unauthenticated users.
XMPP_GUEST_DOMAIN=guest.conf.telviva.com

# Custom Prosody modules for XMPP_DOMAIN (comma separated)
XMPP_MODULES=

# Custom Prosody modules for MUC component (comma separated)
XMPP_MUC_MODULES=muc_allowners

# Custom Prosody modules for internal MUC component (comma separated)
XMPP_INTERNAL_MUC_MODULES=muc_allowners

# MUC for the JVB pool.
JVB_BREWERY_MUC=jvbbrewery

# XMPP user for JVB client connections.
JVB_AUTH_USER=jvb

# XMPP password for JVB client connections.
JVB_AUTH_PASSWORD=ef669504126b175e9239df418e49d2c0

# STUN servers used to discover the server's public IP.
#JVB_STUN_SERVERS=meet-jit-si-turnrelay.jitsi.net:443
JVB_STUN_SERVERS=stun.telviva.com:3478 

# Media port for the Jitsi Videobridge
JVB_PORT=10000

# TCP Fallback for Jitsi Videobridge for when UDP isn't available
JVB_TCP_HARVESTER_DISABLED=true
JVB_TCP_PORT=4443

# A comma separated list of APIs to enable when the JVB is started. The default is none.
# See https://github.com/jitsi/jitsi-videobridge/blob/master/doc/rest.md for more information
#JVB_ENABLE_APIS=rest,colibri

# XMPP component password for Jicofo.
JICOFO_COMPONENT_SECRET=559344174f9221c9feae0a9b12a6793a

# XMPP user for Jicofo client connections. NOTE: this option doesn't currently work due to a bug.
JICOFO_AUTH_USER=focus

# XMPP password for Jicofo client connections.
JICOFO_AUTH_PASSWORD=bf3484c9e5bea905156234635280fcad

# Base URL of Jicofo's reservation REST API
#JICOFO_RESERVATION_REST_BASE_URL=http://reservation.example.com

# XMPP user for Jigasi MUC client connections.
JIGASI_XMPP_USER=jigasi

# XMPP password for Jigasi MUC client connections.
JIGASI_XMPP_PASSWORD=96e9c613079eac85d6d78a7128eebce3

# MUC name for the Jigasi pool.
JIGASI_BREWERY_MUC=jigasibrewery

# Minimum port for media used by Jigasi.
JIGASI_PORT_MIN=20000

# Maximum port for media used by Jigasi.
JIGASI_PORT_MAX=20050

# Enable SDES srtp
#JIGASI_ENABLE_SDES_SRTP=1

# Keepalive method
#JIGASI_SIP_KEEP_ALIVE_METHOD=OPTIONS

# Health-check extension
#JIGASI_HEALTH_CHECK_SIP_URI=keepalive

# Health-check interval
#JIGASI_HEALTH_CHECK_INTERVAL=300000
#
# Enable Jigasi transcription.
ENABLE_TRANSCRIPTIONS=1

# Jigasi will record audio when transcriber is on. Default false.
JIGASI_TRANSCRIBER_RECORD_AUDIO=true

# Jigasi will send transcribed text to the chat when transcriber is on. Default false.
JIGASI_TRANSCRIBER_SEND_TXT=false

# Jigasi will post an url to the chat with transcription file. Default false.
JIGASI_TRANSCRIBER_ADVERTISE_URL=false

# Credentials for connect to Cloud Google API from Jigasi
# Please read https://cloud.google.com/text-to-speech/docs/quickstart-protocol section "Before you begin" paragraph 1 to 5.
# Copy the values from the json to the related env vars
GC_PROJECT_ID=telviva-one
GC_PRIVATE_KEY_ID=1b98be2ccb62ffb50bd69cc2f9aa6fa87c114f4c
GC_PRIVATE_KEY=-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDOI08ITFMnw3rO\nczJbVNvi7H81dwv3wxzylQjDVdGgK0jGQ9eMB13oMO4meX/odyxfOxy1W94nnIja\n3f5PHrl9iycYohGi1uHhgixLX+a4FWdVhznRt2iHKpRViSbHLO0EaBo0qRP+GT8T\nI+t3CsN34is0Ll3mNLIghasocLRVDzjMc33W7v/DEDP1D92Lqjsnpsdt6DAK/ACn\n/iLGGMbMK3+I+vurmMKCOsqVaBPWlPS5FNn9eaw82mSuELaTUD7dke+guC1CgdBV\niLa6J6aaJcrZHsmz1Od5x1GPu81Nc+ysbOnejLg4QjOA09m/KOOaM9+MFbThHs+3\n1icNl18rAgMBAAECggEADVaCiB5sKQAAg7g3c2pnueSkjICR8SuaRWX4Ra9ZW3xB\nfraoDULyxBHabvngmVmQsO7Bukhh9P0va73+dP8fcGyfEHx4GKm/vtgt5oijhJi5\n8XJI/vVXmZtbMrenny6cfXMA8xRXm1Ll3mauFytGn4yuT/eKEtmpBuqvOvQj7vbp\n6alVvr/dip9iswTyH+zPEADkwl8Ag/uvhkNrldehYw2rhWoR+NuR4FXOQFbg/2st\nyoXttRiQOo1XxRdPbFbQDL09PsyEdCTgY+eti/ldvsjn4tRl79GETw79yAxGpaVP\nm/AiKjaOapm3s02iwZHghaiJM7skdjCzhKQAkeaqeQKBgQDxau1+RgC/aGBXEUkX\nVDb4zKAB+Lbw11yy3hEVXhmJYThi5HwwfdkpKNtZwe4e6XcOlxujoViKr28+6oPZ\nGQKykHe/TSzex/k6hWT/P2iAvajTYBMC8gs3lp0xGDomO66357Lf6HSmLjOr81qf\nrKfleZw0GLiu7jKlEt/OJrjKeQKBgQDalth4Pbva16hjP9zM/GHIY4qS6XMeHqGo\naFdAtIDXSlimbrrmKyZlOaMkBsDH5vqCY41wAxEkvryZA7/JXY1tLVw8GKMbfHnD\nIlRZDR6cNUDjUzywvSwc8Q/Qp62uUY3Uy4Dz4APt3jhJnIu6C3Zz2N5+EPgiB/te\nB2zH7bUNwwKBgQC1h0CjRYIEazid34qFNzbKqBrcwKbWvCmg+agA2Cv9iBP9EG9t\niwPClk0x1cf2iHiUiP0ocgcA6V+OAIs5sDu+BzFzsFVAA0AdR/akk4pB29rZbhF9\nkoDqwJ7cLqpy20fKUzfGc6Va27zQ3ADVtd7dhy70YW5lYwjD5UhSW/1xiQKBgBX2\nnC+QvGRj0OaQDyaFoWmaHt1eGZQILeQW/9VfjaaUMM4gSCVCZqw7G1pOV2Z+neMm\nD5sWo81WYOrbBpU8Ei7LJP5g11q2qiFiPKlp+Q5nB2sP/QQhLeKGkjk77+aZCTA9\ndmqKsrpe3rb+xMdfyXoga1Ktb9Ezjh1Hj7WS++MzAoGAaAalJl6Pk1KiBv4rAeqU\nnpvPP1uqhJVI+OEJGRFvXnXDJNi9vyxyaPHCM36zwieoMP3NvglMlBm1eqx82QNN\nLkQ6BZlv5rFAcLsMd38uSJD9ogftpEDdb2ScF5R5OnypROIDqJ6q3qvOA7M6pg4h\n7sn8qt5hmjYqfHOJKKYFqmE=\n-----END PRIVATE KEY-----\n
GC_CLIENT_EMAIL=telviva-one-conferencing-jitsi@telviva-one.iam.gserviceaccount.com
GC_CLIENT_ID=116297808143040390900
GC_CLIENT_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/telviva-one-conferencing-jitsi%40telviva-one.iam.gserviceaccount.com

# Enable recording
ENABLE_RECORDING=1

# XMPP domain for the jibri recorder
XMPP_RECORDER_DOMAIN=recorder.conf.telviva.com

# XMPP recorder user for Jibri client connections.
JIBRI_RECORDER_USER=recorder

# XMPP recorder password for Jibri client connections.
JIBRI_RECORDER_PASSWORD=1ede7ea35d8b3ac0de3b90e07325054c

# Directory for recordings inside Jibri container.
JIBRI_RECORDING_DIR=/config/recordings

# The finalizing script. Will run after recording is complete.
JIBRI_FINALIZE_RECORDING_SCRIPT_PATH=/config/finalize.sh

# XMPP user for Jibri client connections.
JIBRI_XMPP_USER=jibri

# XMPP password for Jibri client connections.
JIBRI_XMPP_PASSWORD=1c8eab8ec9287253b290b48e4376b9e8

# MUC name for the Jibri pool.
JIBRI_BREWERY_MUC=jibribrewery

# MUC connection timeout
JIBRI_PENDING_TIMEOUT=90

# When jibri gets a request to start a service for a room, the room
# jid will look like: roomName@optional.prefixes.subdomain.xmpp_domain
# We'll build the url for the call by transforming that into:
# https://xmpp_domain/subdomain/roomName
# So if there are any prefixes in the jid (like jitsi meet, which
# has its participants join a muc at conference.xmpp_domain) then
# list that prefix here so it can be stripped out to generate
# the call url correctly.
JIBRI_STRIP_DOMAIN_JID=muc

# Directory for logs inside Jibri container.
JIBRI_LOGS_DIR=/config/logs

# Disable HTTPS. Handle TLS connections outside of this setup.
#DISABLE_HTTPS=1

# Redirect HTTP traffic to HTTPS.
# Necessary for Let's Encrypt. Relies on standard HTTPS port (443).
ENABLE_HTTP_REDIRECT=1
